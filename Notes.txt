命令git init
输出initialized empty Git repository in /

示例
错误案例
"
$ git init E:\codefield\Python\.Pycharm\notes
Initialized empty Git repository in E:/codefieldPython.Pycharmnotes/.git/
"
正确案例
"
$ git init E:codefield/Python/.Pycharm/notes
Initialized empty Git repository in E:/codefield/Python/.Pycharm/notes/.git/
"
Git is a version control system.
Git is free software.
git 目前提交都是在主目录下进行提交 对变更表示很无力 子目录不能识别
$ git add notes/notes.txt
子目录对应文件识别 需要备注目录/文件

关于忽略
再来看一个 .gitignore 文件的例子：

# 此为注释 – 将被 Git 忽略

# 忽略所有 .a 结尾的文件

*.a

# 但 lib.a 除外

!lib.a

# 仅仅忽略项目根目录下的 TODO 文件

# 不包括 subdir/TODO

/TODO

# 忽略 build/ 目录下的所有文件

build/

# 忽略 doc 目录下的所有 .txt 文件

# 会忽略 doc/notes.txt 

# 但不包括 doc/server/arch.txt

doc/*.txt

更改完之后需要$commit
$ git commit 文件名 -m "new change"
有时候需要重新加载 git add
git diff 检测有什么变更
//git add . 指提交目录下的所有文件
$git commit -m "modified Notes.txt"

git log 查看版本的历史记录，即可看到修改的过的历史记录，及历史说明。
$ git log --pretty=oneline  只显示一行
测试
 rm test1.txt 删除文件
    git checkout -- test1.txt 回滚
    git rm test1.txt 确认删除
git branch -a 查看分支
    git branch XXX 创造名为XXX的分支
    git checkout XXX    切换到名为XXX的分支
工作区 版本库 流程
    暂存区 stage 代码 
        add后 修改以 暂存形式 存在在 暂存区 中 不加入分支
        commit 提交后进入 版本库



    